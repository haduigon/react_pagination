{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","numArray","pageNumberRender","items","pageNumber","paginate","pageNumberBack","makeStep","className","classNames","disabled","href","onClick","map","page","active","Math","max","apply","item","from","to","numbers","n","push","getNumbers","App","useState","itemPerPage","setItemPerPage","currentPage","setCurrentPage","lastIndex","firstIndex","currentItems","slice","i","ceil","length","id","onChange","event","currentTarget","value","handleSelect","htmlFor","direction","prevState","ReactDOM","render","document","getElementById"],"mappings":"oNAUaA,EAA8B,SAAC,GAMrC,IACkBC,EAILC,EAVlBC,EAKI,EALJA,MACAC,EAII,EAJJA,WACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,eACAC,EACI,EADJA,SA+BA,OACE,qCACE,qBAAIC,UAAU,aAAd,UACE,oBACEA,UAAWC,IAAW,YAAa,CACjCC,SAA6B,IAAnBJ,IAFd,SAKE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACLC,QAAS,kBAAML,EAAS,SACxB,gBAAc,OALhB,qBAjCUL,EA4CFE,EA1CZF,EAAiBW,KAAI,SAAAC,GACnB,OACE,oBACEN,UAAWC,IAAW,YAAa,CACjCM,OAAQD,IAASR,IAFrB,SAME,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAI,WAAMG,GAEVF,QAAS,kBAAMP,EAASS,IAL1B,SAOGA,GAHIA,IANFA,OAsCT,oBACEN,UAAWC,IAAW,YAAa,CACjCC,SAAUJ,KApDGL,EAoD8BG,EAnD5CY,KAAKC,IAAIC,MAAM,KAAMjB,MAiDxB,SAKE,mBACE,UAAQ,WACRO,UAAU,YACVG,KAAK,QACL,gBAAc,QACdC,QAAS,kBAAML,EAAS,YAL1B,uBAWJ,6BACGJ,EAAMU,KAAI,SAAAM,GAAI,OAAI,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YC9E7ChB,ECNC,SAAoBiB,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDDKG,CAAW,EAAG,IACzBZ,KAAI,SAAAU,GAAC,qBAAYA,MAEPG,EAAgB,WAS3B,IARA,IAAMtB,EAAuB,GAC7B,EAAsCuB,mBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAsCF,mBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KAEMC,EAAYF,EAAcF,EAC1BK,EAAaD,EAAYJ,EACzBM,EAAe/B,EAAMgC,MAAMF,EAAYD,GAEpCI,EAAI,EAAGA,GAAKpB,KAAKqB,KAAKlC,EAAMmC,OAASV,GAAcQ,GAAK,EAC/DhC,EAAWoB,KAAKY,GAiBlB,OACE,sBAAK5B,UAAU,YAAf,UACE,uDAEA,oBAAGA,UAAU,OAAO,UAAQ,OAA5B,iBAEGsB,EAFH,IAIGI,EAAa,GAJhB,IAMGA,EAAaI,OAASR,EANzB,KAQG3B,EAAMmC,OART,OAYA,sBAAK9B,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACR+B,GAAG,kBACH/B,UAAU,eACVgC,SAAU,SAACC,GAAD,OA1BpB,SAAsBA,GACpBZ,GAAgBY,EAAMC,cAAcC,OAyBPC,CAAaH,IAJpC,UAME,wBAAQE,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOE,QAAQ,kBAAkBrC,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEL,MAAO+B,EACP9B,WAAYA,EACZC,SA9DU,SAACS,GAAD,OAAkBiB,EAAejB,IA+D3CR,eAAgBwB,EAChBvB,SAvDW,SAACuC,GACE,SAAdA,GAAwBhB,EAAc,GACxCC,GAAe,SAAAgB,GAAS,OAAIA,EAAY,KAGxB,YAAdD,GAA2BhB,EAAc1B,EAAWkC,QACtDP,GAAe,SAAAgB,GAAS,OAAIA,EAAY,YEzB9CC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.4ac88916.chunk.js","sourcesContent":["import classNames from 'classnames';\n\ninterface Props {\n  items: string[],\n  pageNumber: number[],\n  paginate: (page: number) => void,\n  makeStep: (direction: string) => void,\n  pageNumberBack: number,\n}\n\nexport const Pagination: React.FC<Props> = ({\n  items,\n  pageNumber,\n  paginate,\n  pageNumberBack,\n  makeStep,\n}) => {\n  function getMaxOfArray(numArray: number[]) {\n    return Math.max.apply(null, numArray);\n  }\n\n  function getPages(pageNumberRender: number[]) {\n    return (\n      pageNumberRender.map(page => {\n        return (\n          <li\n            className={classNames('page-item', {\n              active: page === pageNumberBack,\n            })}\n            key={page}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${page}`}\n              key={page}\n              onClick={() => paginate(page)}\n            >\n              {page}\n            </a>\n          </li>\n        );\n      })\n    );\n  }\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li\n          className={classNames('page-item', {\n            disabled: pageNumberBack === 1,\n          })}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            onClick={() => makeStep('back')}\n            aria-disabled=\"true\"\n          >\n            «\n          </a>\n        </li>\n\n        {getPages(pageNumber)}\n\n        <li\n          className={classNames('page-item', {\n            disabled: pageNumberBack === getMaxOfArray(pageNumber),\n          })}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled=\"false\"\n            onClick={() => makeStep('forward')}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {items.map(item => <li data-cy=\"item\" key={item}>{item}</li>)}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const pageNumber: number[] = [];\n  const [itemPerPage, setItemPerPage] = useState(3);\n  const [currentPage, setCurrentPage] = useState(1);\n  const pageNow = (page: number) => setCurrentPage(page);\n  const lastIndex = currentPage * itemPerPage;\n  const firstIndex = lastIndex - itemPerPage;\n  const currentItems = items.slice(firstIndex, lastIndex);\n\n  for (let i = 1; i <= Math.ceil(items.length / itemPerPage); i += 1) {\n    pageNumber.push(i);\n  }\n\n  const makeSTep = (direction: string) => {\n    if (direction === 'back' && currentPage > 1) {\n      setCurrentPage(prevState => prevState - 1);\n    }\n\n    if (direction === 'forward' && currentPage < pageNumber.length) {\n      setCurrentPage(prevState => prevState + 1);\n    }\n  };\n\n  function handleSelect(event: React.ChangeEvent<HTMLSelectElement>) {\n    setItemPerPage(+event.currentTarget.value);\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        Page\n        {currentPage}\n        (\n        {currentItems[0]}\n        -\n        {currentItems.length * currentPage}\n        of\n        {items.length}\n        )\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={(event) => handleSelect(event)}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        items={currentItems}\n        pageNumber={pageNumber}\n        paginate={pageNow}\n        pageNumberBack={currentPage}\n        makeStep={makeSTep}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}